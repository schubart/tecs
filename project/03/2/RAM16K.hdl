/**
 * Memory of 16K registers, each 16-bit wide.
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = RAM16K[address(t)](t)
 *     Write: If load(t-1) then RAM16K[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory
 * location specified by address. If load=1, the in value is loaded
 * into the memory location specified by address.  This value becomes
 * available through the out output starting from the next time step.
 */

CHIP RAM16K {

    IN  in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Decide which memory bank should get the load signal.
    DMux4Way(in=load, sel=address[12..13],
             a=a, b=b, c=c, d=d);

    // All memory banks get the same input, only one gets a load signal.
    RAM4K(in=in, load=a, address=address[0..11], out=out0);
    RAM4K(in=in, load=b, address=address[0..11], out=out1);
    RAM4K(in=in, load=c, address=address[0..11], out=out2);
    RAM4K(in=in, load=d, address=address[0..11], out=out3);

    // Descide which memory bank should provide the output.
    Mux4Way16(a=out0, b=out1, c=out2, d=out3,
              sel=address[12..13],
              out=out);
}
